name: Hourly Poster

on:
  schedule:
    # JST 08:00, 20:00, 22:00 → UTC 23:00, 11:00, 13:00
    - cron: "0 23 * * *"
    - cron: "0 11 * * *"
    - cron: "0 13 * * *"
  workflow_dispatch: {}

permissions:
  contents: write  # state.json をコミットするため

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync with remote
        run: |
          git fetch origin "${BRANCH_NAME}"
          git pull --rebase origin "${BRANCH_NAME}" || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: |
          python -m playwright install --with-deps chromium

      - name: Run bot
        env:
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_API_SECRET: ${{ secrets.X_API_SECRET }}
          X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
          X_SCREEN_NAME: ${{ vars.X_SCREEN_NAME }}
          HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
          HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
          # ★ コミュニティ投稿用
          X_COMMUNITY_ID: ${{ secrets.X_COMMUNITY_ID || vars.X_COMMUNITY_ID }}
          X_SHARE_WITH_FOLLOWERS: ${{ vars.X_SHARE_WITH_FOLLOWERS }}
        run: |
          python bot.py

      - name: Commit state
        if: always()
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -e

          if [[ ! -f "state.json" ]]; then
            echo "state.json not found; skip."
            exit 0
          fi

          if git diff --quiet -- state.json; then
            echo "state.json unchanged; skip commit."
            exit 0
          fi

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          cp state.json /tmp/state.json.saved
          git reset --hard
          git clean -fdx

          git fetch origin "${BRANCH_NAME}"
          git checkout "${BRANCH_NAME}"
          git pull --rebase origin "${BRANCH_NAME}" || true

          cp /tmp/state.json.saved state.json

          if git diff --quiet -- state.json; then
            echo "state.json equal to remote; skip commit."
            exit 0
          fi

          git add state.json
          git commit -m "chore: update state $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push origin "${BRANCH_NAME}"
